# Data Source Configuration
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-sql.html#boot-features-configure-datasource
#
# These settings match what's defined in docker-compose-it.yml
# so that we can run locally against that database running in Docker
#
spring.datasource.url=jdbc:mysql://localhost:3306/mamute-local
spring.datasource.username=mamute-user
spring.datasource.password=eel5ohnau6oy0eme0gohRahxeebuWa

# We are using the XML Liquibase configuration (not the YAML default)
spring.liquibase.changeLog=classpath:/db/changelog/db.changelog-master.xml

# Tell Hibernate to validate the database DDL
# This ensures that our entity model matches the database layout set up by Liquibase.
spring.jpa.hibernate.ddl-auto=validate

# We need this physical naming strategy to respect table names configured in @Table
# The default (configured in org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.Naming.DEFAULT_PHYSICAL_STRATEGY)
# is org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, which does not
# respect @Table(name = ...) annotations.
#
# Without this setting, Hibernate DDL validation will fail.
#
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl